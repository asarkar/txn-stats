plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.41"
    id "org.jetbrains.kotlin.kapt" version "1.3.41"
    id "org.jetbrains.kotlin.plugin.allopen" version "1.3.41"
}

group = "org.asarkar"
version = "0.1"

repositories {
    mavenLocal()
    mavenCentral()
}

allOpen {
    annotations("io.micronaut.http.annotation.Controller", "javax.inject.Singleton")
}

dependencies {
    implementation enforcedPlatform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation enforcedPlatform("org.jetbrains.kotlin:kotlin-bom:$kotlinVersion")
    compile(
            "org.jetbrains.kotlin:kotlin-stdlib-jdk8",
            "org.jetbrains.kotlin:kotlin-reflect",
            "io.micronaut:micronaut-runtime",
            "com.fasterxml.jackson.module:jackson-module-kotlin:$jacksonVersion"
    )
    runtimeOnly(
            "ch.qos.logback:logback-classic:$logbackVersion",
            "io.micronaut:micronaut-http-server-netty"
    )
    kapt("io.micronaut:micronaut-inject-java:$micronautVersion")
    kaptTest("io.micronaut:micronaut-inject-java:$micronautVersion")
    testImplementation(
            "org.junit.jupiter:junit-jupiter-api:$junitVersion",
            "org.junit.jupiter:junit-jupiter-params:$junitVersion",
            "org.assertj:assertj-core:$assertjVersion",
            "io.micronaut.test:micronaut-test-junit5:$micronautTestVersion",
            "io.micronaut:micronaut-http-client"
    )
    testRuntime("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
}

test {
    useJUnitPlatform()
    testLogging {
        events = ["passed", "skipped", "failed"]
        exceptionFormat = "short"
        showCauses = true
        showExceptions = true
        showStackTraces = true
        displayGranularity = 2
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "11"
        // retain parameter names for Java reflection
        javaParameters = true
    }
}
